import React from 'react';
import { WidthProvider, Responsive, Layout, Layouts } from 'react-grid-layout';
import { DraggableBox } from '../dnd/DraggableBox';
import { Box, Card, Typography } from '@mui/material';
import 'react-grid-layout/css/styles.css';
import 'react-resizable/css/styles.css';

const ResponsiveGridLayout = WidthProvider(Responsive);

const EditGrid = () => {

    const layout = [
        { i: '0', x: 0, y: 0, w: 1, h: 2 },
        { i: '1', x: 1, y: 0, w: 3, h: 2 },
        { i: '2', x: 4, y: 0, w: 1, h: 2 }];


    var layouts = {
        lg: layout,
        md: layout,
        sm: layout,
        xs: layout,
        xxs: layout
    };


    const onDrop = (layout: any, layoutItem: any, e: any) => {
        
        const type = e.dataTransfer.getData('text');
        console.log('Type: ' + type);
        console.log('DROP: ' + JSON.stringify(layoutItem));
        // setLayouts((prev) => {
        //     const newLayout = [...layout];
        //     const newLayouts = {
        //         lg: newLayout,
        //         md: newLayout,
        //         sm: newLayout,
        //         xs: newLayout,
        //         xxs: newLayout
        //     };
        //     console.log('hello: ' +JSON.stringify(newLayouts));
        //     return newLayouts;
        // });
        layouts = {
            lg: layout,
            md: layout,
            sm: layout,
            xs: layout,
            xxs: layout
        }
    };


    return (
        <ResponsiveGridLayout
            className="layout"
            layouts={layouts}
            breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}
            cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}
            isDraggable={true}
            isResizable={true}
            droppingItem={{ i: layout.length.toString(), w: 2, h: 2 }}
            draggableHandle=".dragHandle"
            resizeHandles={['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne']}
            useCSSTransforms={true}
            isDroppable={true} 
            onDrop={onDrop}
            onLayoutChange={(layout, layouts) => {
                console.log('Layout: ' + JSON.stringify(layout));
                // setLayouts(layouts);
            }}
            preventCollision={false}
            // verticalCompact={true} //?
            // autoSize={true} //?
        >
            {layout.map((item) => (

                <Card key={item.i}  >
                    <Typography variant="h6">{JSON.stringify(item)}</Typography>
                    <div className="dragHandle">se</div>
                </Card>
            ))}
        </ResponsiveGridLayout>
    );
}


export default EditGrid;